import "./Lesson.scss";
import first from "./Lesson31_img/first.png"

export const Lesson31= () => {

    return(
        <div className="lesson-block">
            <h1 className="title-h1">Компонування</h1>
            <div className="main-block">
                <div className="content">
                    <h3 className="content__title-h3">Введення в компонування</h3>
                    <div className="content__block">
                        <p className="content__paragraph">Щоб перейти безпосередньо до створення красивих інтерфейсів та його компонентів, спочатку необхідно познайомитися з компоновкою. Компонування (layout) є процес розміщення елементів усередині контейнера. Можливо, ви звертали увагу, що одні програми та веб-сайти на різних екранах з різною роздільною здатністю виглядають по-різному: десь краще, десь гірше. Здебільшого такі програми використовують жорстко закодовані у коді розміри елементів керування. WPF уникає такого підходу на користь так званого "гумового дизайну", де весь процес позиціонування елементів здійснюється за допомогою компонування.</p>
                        <p className="content__paragraph">Завдяки компоновці ми можемо зручним для нас чином налаштувати елементи інтерфейсу, позиціонувати їх певним чином. Наприклад, елементи компонування в WPF дозволяють при ресайзі - стисканні або розтягуванні масштабувати елементи, що дуже зручно, а візуально не створює будь-яких шорсткості типу незаповнених порожнин на формі.</p>
                        <p className="content__paragraph">У WPF компонування здійснюється за допомогою спеціальних контейнерів. Фреймворк надає нам такі контейнери: Grid , UniformGrid , StackPanel , WrapPanel , DockPanel і Canvas .</p>
                        <p className="content__paragraph">Різні контейнери можуть містити в собі інші контейнери. Крім даних контейнерів існує ще ряд елементів, такі як TabPanel, які можуть включати інші елементи і навіть контейнери компонування, проте на саму компонування не так впливають на відміну від перерахованих вище. Крім того, якщо нам не вистачає стандартних контейнерів, ми можемо визначити свої потрібні нам функціональності.</p>
                        <p className="content__paragraph">Контейнери компонування дозволяють ефективно розподілити доступний простір між елементами, знайти для нього найкращі розміри.</p>
                        <p className="content__paragraph">Усі вище перелічені контейнери компонування успадковуються від абстрактного класу Panel, а саме дерево успадкування можна так:</p>
                        <img src={first} alt="#" className="img"/>
                    </div>
                    <div className="content__block">
                        <p className="content__paragraph">У WPF при компонуванні та розміщенні елементів усередині вікна нам треба дотримуватися наступних принципів:</p> 
                        <p className="content__paragraph">- Небажано вказувати явні розміри елементів (за винятком мінімальних та максимальних розмірів). Розміри мають визначатися контейнерами.</p>  
                        <p className="content__paragraph">- Небажано вказувати явні позиції та координати елементів усередині вікна. Позиціонування елементів цілком має бути прерогативою контейнерів. І контейнер сам повинен визначати, як елемент розташовуватиметься. Якщо нам потрібно створити складну систему компонування, то ми можемо вкладати один контейнер в інший, щоб досягти максимально зручного розташування елементів керування.</p>            
                    </div>
                </div>
                <div className="content">
                    <h3 className="content__title-h3">Процес компонування</h3>
                    <div className="content__block">
                        <p className="content__paragraph">Процес компонування проходить два етапи: вимір (measure) та розстановка (arrange). На етапі вимірювання контейнер виробляє вимірювання пріоритетного для дочірніх елементів місця. Однак не завжди контейнер має достатньо місця, щоб розставити всі елементи за їх переважним розміром, тому їх розміри доводиться усікати. Потім відбувається етап безпосередньої розміщення дочірніх елементів усередині контейнера.</p>  
                        <p className="content__paragraph">Тепер розглянемо контейнери компонування докладніше.</p>          
                    </div>
                </div>
            </div>
        </div>    
    )
}

export default Lesson31